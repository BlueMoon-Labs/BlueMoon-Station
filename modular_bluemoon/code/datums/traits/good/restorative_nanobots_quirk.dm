/*
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣶⣶⣶⣶⣶⣶⣶⣶⣶⣤⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⠿⠟⠹⣟⣛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣾⢿⣻⠭⠛⠊⠉⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠛⢿⣿⣿⣿⣿⣿⣿⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠿⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⣉⢻⣿⣿⣿⣿⣿⣿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⣼⣉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠎⠀⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠾⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠅⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢰⠂⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠦⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠋⠉⠀⠂⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡼⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠠⠀⠀⡀⠀⠒⠒⣛⣉⣉⣀⡀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠠⠂⠀⡰⡍⢀⣀⢀⠠⠀⢀⣤⢤⣂⣼⠟⠉⠉⠁⠀⠀⠀⠀⠀⠉⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠆⠂⠀⠈⠉⠁⠀⠑⠀⠀⠀⠀⣮⠃⠋⣡⣄⣀⣤⣀⢀⣠⣤⣤⣤⣀⣀⣀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⢢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣠⣴⣠⣼⣶⣶⣶⡠⢡⡇⡜⠀⠇⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣶⣾⣼⡥⠾⢼⣿⣿⡿⠿⠿⣿⣿⡿⠛⠛⡿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⡇⠻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣀⣼⣿⠾⠛⠋⠉⠉⠉⢉⣿⣻⣿⡦⢶⢾⣿⡇⠀⠀⠰⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢠⣿⡟⠉⠃⢠⣤⣶⡶⢤⣤⡾⣿⢿⠃⠀⠀⢸⣿⣏⣿⣶⣿⣿⣟⠉⢉⣩⣽⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣷⣼⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⣿⣟⠲⣤⠼⠟⢡⣶⡿⠿⠿⣿⡟⠀⠀⠀⣼⡿⢿⣿⣿⣿⣛⣁⣒⣶⣾⣿⣿⣧⣿⣿⣭⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣤⣶⣻⣭⣴⡶⢿⡟⠁⠀⠀⠀⣿⣷⣾⠉⠻⢯⣭⣉⣉⠉⠉⠉⠉⠁⠀⠈⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⡹⣿⡉⢀⣠⣤⠶⣻⣤⠃⠀⠀⢀⣿⣿⠿⠟⠿⣦⠈⠉⠙⠛⠻⠶⣦⣤⣀⡀⣾⣿⣿⣿⣏⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠁⠘⠟⠋⠁⢀⣼⡟⢀⠀⠀⢠⣿⣿⣿⣤⣴⣶⣿⣿⣦⣤⣄⠀⠀⠀⠉⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢀⣴⡿⠋⢶⣿⣷⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠈⠙⠳⢤⡀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⣠⣿⠋⠀⠀⠀⠉⠉⠉⠻⣿⣿⣿⣿⣿⣿⣿⡉⠀⠀⣠⠀⠀⢩⡃⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡄⢠⣿⠁⠀⠀⠀⠀⠀⣀⣀⠴⢬⣽⣦⣽⣿⣿⣿⣿⣤⣼⣿⣶⣿⢠⣷⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠸⡇⠀⣴⣶⣤⣶⣿⣿⣿⣿⣛⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢸⡿⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⠀⠀⠈⠉⠙⠋⠉⠉⠉⠉⠉⠉⠉⠉⢁⣀⣀⣀⡠⠂⠀⠀⠀⣼⡇⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⠀⠀⠀⠀⣶⠶⠿⠿⠿⠛⠛⠿⢟⣉⠉⠀⠀⠀⢠⣞⣿⣤⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠐⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠀⡆⠀⠀⠀⠐⠙⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠠⠞⠋⢸⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⢳⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⠀⡀⠀⠀⠀⢀⣤⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠙⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣧⠀⠀⠀⢰⡏⠀⠀⡰⠂⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠈⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠴⠁⡿⣧⠐⠀⢸⡇⠀⡡⡇⢸⡀⠀⠀⠀⠀⠀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠈⣿⣶⢤⢀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⡴⠊⠀⠀⠀⠇⣿⣷⣦⣼⡅⢀⠀⣹⣞⣇⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠸⣿⣿⣿⡑⢆⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⡰⠋⠀⠀⠀⠀⠀⢰⡟⢿⣿⡝⢿⣾⣿⣿⣿⣿⣤⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⢀⡿⣿⣏⣿⣦⣳⡷⣄⠀
⠀⣀⠤⠐⢊⡟⠁⠀⠀⠀⠀⠀⠀⠸⣧⡜⣿⣷⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠷⡴⠋⠀⠏⣿⣿⣿⣿⣿⡎⠂
⠉⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⢷⠓⣯⢻⣇⠀⠀⠙⢿⣿⣿⠛⠛⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⣠⣴⣿⣿⣿⠁⠀⠉⢀
⠀⠀⢠⣿⠁⠀⠀⠀⠀⣀⣠⣴⣶⣦⣌⡓⢼⣦⢻⡆⠀⠀⠀⢻⣿⣧⣀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⣠⣾⣿⣿⣿⣿⣿⣿⣶⣴⣾
⠀⠀⠾⣿⣀⣀⣠⣤⣾⣿⣿⣿⣿⣿⡿⣿⣷⣾⣿⣿⣄⠀⠀⠀⠹⣌⠻⢦⡀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠘⠛⠛⠿⠿⠿⠿⠿⠟⠛⢻⣧⣘⣿⣆⠙⢿⢿⣦⠀⠀⢀⠜⣆⠀⠱⣤⣬⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⢿⣧⠀⠠⠙⢷⣤⡁⢶⣿⣧⠀⡈⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⣿⣿⠋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⢹⣿⣯⢳⣵⡄⠉⠀⠹⣿⣞⣿⡇⠀⠁⠀⠀⠀⠉⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣼⣿⡇⢸⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠆⠙⣷⣣⡿⡽⡆⠐⠀⠘⢿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⠿⢿⣿⣿⣿⣿⣿⣿⡿⣹⣿⣿⠗⣯⣿⡟⣠⠚⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠘⢿⡕⠙⣿⣆⠀⠀⠈⢻⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠆⠀⢨⣿⣿⣿⣿⣿⣳⣿⣿⡏⣼⣼⡿⣶⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣆⢫⣪⡳⡀⠀⠀⠙⢿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⠁⠀⠀⢸⣿⣿⣿⣿⢧⣿⣿⡿⢤⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠈⠲⣣⡙⢮⣢⡀⠀⠈⠻⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⢿⣿⣿⡿⡷⣿⣻⠟⣤⣾⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠅⠀⠂⠀⠈⠻⣆⢉⠺⣆⠀⠀⠙⢿⣿⣧⣦⡀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⢹⡞⠝⢁⡩⢋⣾⣿⣿⠏⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠷⢵⣤⡙⠲⣄⡈⠻⣿⣿⡣⣄⠀⠀⠀⠀⠀⠀⠀⠉⣩⠏⣨⢶⠉⣰⣿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⢶⣄⣉⠳⣮⠻⣿⣾⣀⡀⠀⠀⠀⢀⡀⡴⣡⢞⣴⣿⣾⡿⠏⠀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
*/

/datum/quirk/restorative_nanobots
	name = BLUEMOON_TRAIT_NAME_RESTORATIVE_NANOBOTS
	desc = "ТОЛЬКО ДЛЯ СИНТЕТИКОВ! У вас установлена сложная ремонтная система из наноботов, которая со временем ремонтирует ваши повреждения, однако при этом потребляет много энергии и уменьшает вашу защиту от ЭМИ. Восстановление прошивки в сделку не входит."
	gain_text = span_warning("% dkms status \n nanomachines, 4.2, 3.2.0-33-generic-pae, x540/512: installed... сынок")
	lose_text = span_notice("Your dream dies with you, Senator.")
	value = 2
	mob_trait = TRAIT_BLUEMOON_RESTORATIVE_NANOBOTS
	on_spawn_immediate = FALSE // иначе on_spawn из-за потенциального удаления квирка ломается
	processing_quirk = TRUE
	var/healing_in_progress = FALSE

/datum/quirk/restorative_nanobots/on_spawn()
	. = ..()
	if(!isrobotic(quirk_holder))
		to_chat(quirk_holder, span_warning("Все квирки были сброшены, т.к. квирк [src] не подходит виду персонажа."))
		var/list/user_quirks = quirk_holder.roundstart_quirks
		user_quirks -= src
		for(var/datum/quirk/Q as anything in user_quirks)
			qdel(Q)
		qdel(src)

/datum/quirk/restorative_nanobots/on_process()
	. = ..()
	//Works only for synthetics #silicon_power
	var/mob/living/carbon/human/H = quirk_holder
	if (!istype(H))
		return

	var/consumed_damage = H.getFireLoss() + H.getBruteLoss()
	if (!consumed_damage)
		if(healing_in_progress)
			REMOVE_TRAIT(H, TRAIT_NANOBOT_REPAIR_IN_PROGRESS, QUIRK_TRAIT)
			H.physiology.hunger_mod /= 1.8
			healing_in_progress = FALSE
		return

	if(!healing_in_progress)
		ADD_TRAIT(H, TRAIT_NANOBOT_REPAIR_IN_PROGRESS, QUIRK_TRAIT)
		H.physiology.hunger_mod *= 1.8
		healing_in_progress = TRUE

	var/heal_multiplier = H.getMaxHealth() / 100
	var/bruteheal = -0.6
	var/burnheal = -0.6
	if (consumed_damage > 50 * heal_multiplier)
		heal_multiplier *= 0.5
	H.adjustBruteLoss(bruteheal * heal_multiplier, TRUE, TRUE, TRUE, FALSE)
	H.adjustFireLoss(burnheal * heal_multiplier, TRUE, TRUE, TRUE, FALSE)

/datum/quirk/restorative_nanobots/remove()
	var/mob/living/carbon/human/H = quirk_holder
	if (!istype(H) || !healing_in_progress)
		return
	H.physiology.hunger_mod /= 1.8
	REMOVE_TRAIT(quirk_holder, TRAIT_NANOBOT_REPAIR_IN_PROGRESS, QUIRK_TRAIT)
